/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

/*  universal selector selects each and every element on the page 
and then apply these declarations on them. These CSS rules are called "simple reset".
This is needed because browsers apply some margins or padding by default to certain elements

 */
* {
    margin : 0;
    padding: 0;
    box-sizing: border-box;
}

/* border-box - borders and paddings are no longer added to the total width or height
that we specify to the box */

/* we specify font in body, but not in universal selector because the properties
related to font are usually inherited */
body {
    font-family: "Lato", sans-serif;
    font-weight: 400;
    font-size: 16px;
    line-height: 1.7; 
    /* 1.7 times bigger than the predefined line-height that we would have without this; */
    color: #777;
    padding: 30px;
}

.header {
    height: 95vh;
    background-image: linear-gradient(to right bottom, 
    rgba(116, 193, 102, 0.8), 
    rgba(40, 180, 133, 0.8)),
     url(../img/hero.jpg);
    /* to specify gradient we always use the background-image property.
      We want the background to stay on top and so it actually has to be
      the first background-image that we specify. WE put gradient, then comma img*/
    background-size: cover;
    /* whatever the width of the viewport or the element it will always
    try to fit the element inside the box   */
    background-position: top;
    /* ensures whatever the viewport size the top of the image is always 
    stays at the top of container */
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    position: relative;
}

.logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
}

.logo{
    height: 35px;
}

.text-box{
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
}

.heading-primary{
    color: #fff;
    text-transform: uppercase;
    backface-visibility: hidden;
    /* sometimes animations look like the move to the tope a tiny bit.
    Actually its the entire parent element that moves and gives that shaky effect.
    backface-visibility: hidden prevents this shakiness from happening */
    margin-bottom: 60px;
}
.heading-primary-main{
    display: block;
    font-size: 60px;
    font-weight: 400;
    letter-spacing: 35px;

    animation-name: moveInLeft;
    animation-duration: 1s;
    animation-timing-function: ease-out;
    /* with ease-in animation will start faster, and become slower by the end,
    but ease-out starts slower and becomes faster by the end */


    /* animation-delay: 1s; 
    animation-iteration-count: 3;

    */
}
.heading-primary-sub{
    display: block;
    font-size: 20px;
    font-weight: 700;
    letter-spacing: 17.4px;
    animation: moveInRight 1s ease-out;  /* shorthand property */
}
/* for browser performance it is best to only animate two
different properties. One is opacity and the other is transform */
@keyframes moveInLeft {
    0% {
        opacity: 0;
        transform: translateX(-100px);
    }

    80% {
        transform: translateX(10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}
@keyframes moveInRight {
    0% {
        opacity: 0;
        transform: translateX(100px);
    }

    80% {
        transform: translateX(-10px);
    }

    100% {
        opacity: 1;
        transform: translate(0);
    }
}

.btn:link, 
.btn:visited{
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    /* inline-block elements are treated as if they are text */
    border-radius: 100px;
    transition: all .2s;
    /* all - we dont need to specify each and every property. All properties are enabled to
    to be animated */
}
.btn:hover {
    transform: translateY(-3px);
}
.btn:active{
    transform: translateY(-1px);

}

.btn-white {
    background-color: #fff;
    color: #777;
}
